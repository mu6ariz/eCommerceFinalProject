#pragma checksum "C:\Users\Microsoft Surface\source\repos\Mubariz Zulfiqarov P113 Final Project\B Final End 2020\B Endd\Back\ShopElazone\ShopElazone\Views\Smartphones\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "eca78ff5a7c3759e9b8fcbe514f97a879563ca19"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Smartphones_Index), @"mvc.1.0.view", @"/Views/Smartphones/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Microsoft Surface\source\repos\Mubariz Zulfiqarov P113 Final Project\B Final End 2020\B Endd\Back\ShopElazone\ShopElazone\Views\_ViewImports.cshtml"
using ShopElazone;

#line default
#line hidden
#line 2 "C:\Users\Microsoft Surface\source\repos\Mubariz Zulfiqarov P113 Final Project\B Final End 2020\B Endd\Back\ShopElazone\ShopElazone\Views\_ViewImports.cshtml"
using ShopElazone.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"eca78ff5a7c3759e9b8fcbe514f97a879563ca19", @"/Views/Smartphones/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bfeb183e292a732438d55d77910026c2d0f42be9", @"/Views/_ViewImports.cshtml")]
    public class Views_Smartphones_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<Elazone.Models.Products>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("ml-3 filter-custom-price"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "get", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Smartphones", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "SingleFilter", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "CustomPrice", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            WriteLiteral("\r\n");
#line 4 "C:\Users\Microsoft Surface\source\repos\Mubariz Zulfiqarov P113 Final Project\B Final End 2020\B Endd\Back\ShopElazone\ShopElazone\Views\Smartphones\Index.cshtml"
  
    ViewData["Title"] = "Smartphones";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            WriteLiteral(@"
<style>
    #c-item {
        display: none;
    }
</style>
<div style=""background-color: rgb(22, 55, 136);"" id=""mySideFilter"" class=""d-lg-none d-block sidenav"">
    <a href=""javascript:void(0)"" class=""closebtn"" onclick=""closeFilter()"">&times;</a>
    <div class=""categories-filter mt-5"">
        <h4>Brands</h4>

        <ul class=""filter-container"">s

            <li>
                <label>
                    <input id=""rb1"" value=""Apple"" type=""checkbox"" name=""brand"" href=""#"" class=""BrandOfProduct"">
                    Apple
                    <span class=""magnitude"">(3)</span>

                </label>
            </li>

            <li>
                <label>
                    <span>

                        <span class=""ps-shown-by-js""></span>
                    </span>

                    <input id=""rb2"" value=""Samsung"" type=""checkbox"" name=""brand"" href=""#"" class=""BrandOfProduct"">
                    Samsung
                    <span class=""magnitude"">(3)</span>

");
            WriteLiteral(@"                </label>
            </li>

            <li>
                <label>


                    <input id=""rb3"" value=""Lg"" type=""checkbox"" name=""brand"" href=""#"" class=""BrandOfProduct"">
                    Lg
                    <span class=""magnitude"">(3)</span>

                </label>
            </li>

            <li>
                <label>

                    <input id=""rb4"" value=""Xiaomi"" type=""checkbox"" name=""brand"" href=""#"" class=""BrandOfProduct"">
                    Xiaomi
                    <span class=""magnitude"">(3)</span>

                </label>
            </li>

            <li>
                <label>

                    <input id=""rb5"" value=""Nokia"" type=""checkbox"" name=""brand"" href=""#"" class=""BrandOfProduct"">
                    Nokia
                    <span class=""magnitude"">(3)</span>

                </label>
            </li>

        </ul>
    </div>

    <div class=""categories-filter mt-5"">
        <h4>Color</h4>
        <ul cl");
            WriteLiteral(@"ass=""filter-container"">

            <li>
                <label>
                    <span>

                        <span class=""ps-shown-by-js""></span>
                    </span>

                    <input id=""color1"" value=""Black"" type=""checkbox"" name=""Color"" class=""ColorOfProduct"">
                    Black
                    <span class=""magnitude"">(3)</span>

                </label>
            </li>

            <li>
                <label>
                    <span>

                        <span class=""ps-shown-by-js""></span>
                    </span>

                    <input id=""color2"" value=""White"" type=""checkbox"" name=""Color"" class=""ColorOfProduct"">
                    White
                    <span class=""magnitude"">(3)</span>

                </label>
            </li>

            <li>
                <label>
                    <span>

                        <span class=""ps-shown-by-js""></span>
                    </span>

                    <");
            WriteLiteral(@"input id=""color3"" value=""Green"" type=""checkbox"" name=""Color"" class=""ColorOfProduct"">
                    Green
                    <span class=""magnitude"">(3)</span>

                </label>
            </li>

            <li>
                <label>
                    <span>

                        <span class=""ps-shown-by-js""></span>
                    </span>

                    <input id=""color4"" value=""Red"" type=""checkbox"" name=""Color"" class=""ColorOfProduct"">
                    Red
                    <span class=""magnitude"">(3)</span>

                </label>
            </li>

            <li>
                <label>
                    <span");
            BeginWriteAttribute("class", " class=\"", 3902, "\"", 3910, 0);
            EndWriteAttribute();
            WriteLiteral(@"></span>

                    <input id=""color5"" value=""Blue"" type=""checkbox"" name=""Color"" class=""ColorOfProduct"">
                    Blue
                    <span class=""magnitude"">(3)</span>

                </label>
            </li>

            <li>
                <label>
                    <span");
            BeginWriteAttribute("class", " class=\"", 4228, "\"", 4236, 0);
            EndWriteAttribute();
            WriteLiteral(@"></span>

                    <input id=""color6"" value=""Gold"" type=""checkbox"" name=""Color"" class=""ColorOfProduct"">
                    Gold
                </label>
            </li>

        </ul>
    </div>

    <div class=""filter-custom-price categories-filter mt-5"">
        <h4>Price</h4>
        <ul class=""filter-container"">



        </ul>
        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eca78ff5a7c3759e9b8fcbe514f97a879563ca1911095", async() => {
                WriteLiteral("\r\n            <input name=\"val1\" id=\"customePriceMin\" type=\"number\" placeholder=\"Min $\" />\r\n            <input name=\"val2\" id=\"customePriceMax\" type=\"number\" placeholder=\"Max $\" />\r\n            <input type=\"submit\" name=\"Search\" />\r\n        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    </div>

    <div class=""categories-filter mt-5"">
        <h4>Ram</h4>
        <ul class=""filter-container"">
            <li>
                <label>
                    <span>

                        <span class=""ps-shown-by-js""></span>
                    </span>

                    <input input id=""ram1"" value=""512"" type=""checkbox"" name=""Ram"" class=""RamOfProduct"">
                    512Mb
                    <span class=""magnitude"">(0)</span>

                </label>
            </li>
            <li>
                <label>
                    <span>

                        <span class=""ps-shown-by-js""></span>
                    </span>

                    <input input id=""ram2"" value=""1"" type=""checkbox"" name=""Ram"" class=""RamOfProduct"">
                    1GB
                    <span class=""magnitude"">(3)</span>

                </label>
            </li>

            <li>
                <label>
                    <span>

                        <span cl");
            WriteLiteral(@"ass=""ps-shown-by-js""></span>
                    </span>

                    <input input id=""color1"" value=""2"" type=""checkbox"" name=""Ram"" class=""RamOfProduct"">
                    2GB
                    <span class=""magnitude"">(3)</span>

                </label>
            </li>

            <li>
                <label>
                    <span>

                        <span class=""ps-shown-by-js""></span>
                    </span>

                    <input input id=""ram3"" value=""4"" type=""checkbox"" name=""Ram"" class=""RamOfProduct"">
                    4GB
                    <span class=""magnitude"">(3)</span>

                </label>
            </li>

            <li>
                <label>
                    <span>

                        <span class=""ps-shown-by-js""></span>
                    </span>

                    <input input id=""ram4"" value=""6"" type=""checkbox"" name=""Ram"" class=""RamOfProduct"">
                    6GB
                    <span class=""ma");
            WriteLiteral(@"gnitude"">(3)</span>

                </label>
            </li>
        </ul>
    </div>

    <div class=""categories-filter mt-5"">
        <h4>Memory</h4>
        <ul class=""filter-container"">
            <li>
                <label>


                    <input id=""memory1"" value=""16"" type=""checkbox"" name=""Memory"" class=""MemoryOfProduct"">
                    16GB
                    <span class=""magnitude"">(3)</span>

                </label>
            </li>

            <li>
                <label>


                    <input id=""memory2"" value=""32"" type=""checkbox"" name=""Memory"" class=""MemoryOfProduct"">
                    32GB
                    <span class=""magnitude"">(3)</span>

                </label>
            </li>

            <li>
                <label>


                    <input id=""memory3"" value=""64"" type=""checkbox"" name=""Memory"" class=""MemoryOfProduct"">
                    64GB
                    <span class=""magnitude"">(3)</span>

             ");
            WriteLiteral(@"   </label>
            </li>

            <li>
                <label>


                    <input id=""memory4"" value=""128"" type=""checkbox"" name=""Memory"" class=""MemoryOfProduct"">
                    128GB
                    <span class=""magnitude"">(3)</span>

                </label>
            </li>

            <li>
                <label>


                    <input id=""memory5"" value=""256"" type=""checkbox"" name=""Memory"" class=""MemoryOfProduct"">
                    256GB
                    <span class=""magnitude"">(3)</span>

                </label>
            </li>

        </ul>
    </div>
</div>
<span class=""p-1 mobile-menu-filter d-lg-none d-block"" style=""background-color:transparent; font-size: 30px;
    cursor: pointer;
    position: absolute;
    top: 5.7em;"" onclick=""openFilter()""><i class=""mdi mdi-filter-menu-outline""></i></span>
<div class=""wrapper"">
    <div class=""container-fluid"">
        <div class=""row"">
            <div class=""d-none d-lg-block col-l");
            WriteLiteral(@"g-3 col-md-3 col-sm-12 filters-side"">
                <div class=""categories-filter mt-5"">
                    <h4>Brands</h4>

                    <ul class=""filter-container"">

                        <li>
                            <label>
                                <input id=""rb1"" value=""Apple"" type=""checkbox"" name=""brand"" href=""#"" class=""BrandOfProduct"">
                                Apple
                                <span class=""magnitude"">(3)</span>

                            </label>
                        </li>

                        <li>
                            <label>
                                <span>

                                    <span class=""ps-shown-by-js""></span>
                                </span>

                                <input id=""rb2"" value=""Samsung"" type=""checkbox"" name=""brand"" href=""#"" class=""BrandOfProduct"">
                                Samsung
                                <span class=""magnitude"">(3)</span>

   ");
            WriteLiteral(@"                         </label>
                        </li>

                        <li>
                            <label>


                                <input id=""rb3"" value=""Lg"" type=""checkbox"" name=""brand"" href=""#"" class=""BrandOfProduct"">
                                Lg
                                <span class=""magnitude"">(3)</span>

                            </label>
                        </li>

                        <li>
                            <label>

                                <input id=""rb4"" value=""Xiaomi"" type=""checkbox"" name=""brand"" href=""#"" class=""BrandOfProduct"">
                                Xiaomi
                                <span class=""magnitude"">(3)</span>

                            </label>
                        </li>

                        <li>
                            <label>

                                <input id=""rb5"" value=""Nokia"" type=""checkbox"" name=""brand"" href=""#"" class=""BrandOfProduct"">
                ");
            WriteLiteral(@"                Nokia
                                <span class=""magnitude"">(3)</span>

                            </label>
                        </li>

                    </ul>
                </div>

                <div class=""categories-filter mt-5"">
                    <h4>Color</h4>
                    <ul class=""filter-container"">

                        <li>
                            <label>
                                <span>

                                    <span class=""ps-shown-by-js""></span>
                                </span>

                                <input id=""color1"" value=""Black"" type=""checkbox"" name=""Color"" class=""ColorOfProduct"">
                                Black
                                <span class=""magnitude"">(3)</span>

                            </label>
                        </li>

                        <li>
                            <label>
                                <span>

                              ");
            WriteLiteral(@"      <span class=""ps-shown-by-js""></span>
                                </span>

                                <input id=""color2"" value=""White"" type=""checkbox"" name=""Color"" class=""ColorOfProduct"">
                                White
                                <span class=""magnitude"">(3)</span>

                            </label>
                        </li>

                        <li>
                            <label>
                                <span>

                                    <span class=""ps-shown-by-js""></span>
                                </span>

                                <input id=""color3"" value=""Green"" type=""checkbox"" name=""Color"" class=""ColorOfProduct"">
                                Green
                                <span class=""magnitude"">(3)</span>

                            </label>
                        </li>

                        <li>
                            <label>
                                <span>

    ");
            WriteLiteral(@"                                <span class=""ps-shown-by-js""></span>
                                </span>

                                <input id=""color4"" value=""Red"" type=""checkbox"" name=""Color"" class=""ColorOfProduct"">
                                Red
                                <span class=""magnitude"">(3)</span>

                            </label>
                        </li>

                        <li>
                            <label>
                                <span");
            BeginWriteAttribute("class", " class=\"", 13670, "\"", 13678, 0);
            EndWriteAttribute();
            WriteLiteral(@"></span>

                                <input id=""color5"" value=""Blue"" type=""checkbox"" name=""Color"" class=""ColorOfProduct"">
                                Blue
                                <span class=""magnitude"">(3)</span>

                            </label>
                        </li>

                        <li>
                            <label>
                                <span");
            BeginWriteAttribute("class", " class=\"", 14092, "\"", 14100, 0);
            EndWriteAttribute();
            WriteLiteral(@"></span>

                                <input id=""color6"" value=""Gold"" type=""checkbox"" name=""Color"" class=""ColorOfProduct"">
                                Gold
                            </label>
                        </li>

                    </ul>
                </div>

                <div class=""filter-custom-price categories-filter mt-5"">
                    <h4>Price</h4>
                    <ul class=""filter-container"">

                    </ul>
                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eca78ff5a7c3759e9b8fcbe514f97a879563ca1923757", async() => {
                WriteLiteral(@"
                        <input name=""customePriceMin"" id=""val1"" type=""number"" placeholder=""Min $"" />
                        <input name=""customePriceMax"" id=""val2"" type=""number"" placeholder=""Max $"" />
                        <input type=""submit"" name=""Search"" />
                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                </div>

                <div class=""categories-filter mt-5"">
                    <h4>Ram</h4>
                    <ul class=""filter-container"">
                        <li>
                            <label>
                                <span>

                                    <span class=""ps-shown-by-js""></span>
                                </span>

                                <input input id=""ram1"" value=""512"" type=""checkbox"" name=""Ram"" class=""RamOfProduct"">
                                512Mb
                                <span class=""magnitude"">(0)</span>

                            </label>
                        </li>
                        <li>
                            <label>
                                <span>

                                    <span class=""ps-shown-by-js""></span>
                                </span>

                                <input input id=""ram2"" value=""1"" type=""checkbox"" name=""Ram"" class=""RamOfProduc");
            WriteLiteral(@"t"">
                                1GB
                                <span class=""magnitude"">(3)</span>

                            </label>
                        </li>

                        <li>
                            <label>
                                <span>

                                    <span class=""ps-shown-by-js""></span>
                                </span>

                                <input input id=""color1"" value=""2"" type=""checkbox"" name=""Ram"" class=""RamOfProduct"">
                                2GB
                                <span class=""magnitude"">(3)</span>

                            </label>
                        </li>

                        <li>
                            <label>
                                <span>

                                    <span class=""ps-shown-by-js""></span>
                                </span>

                                <input input id=""ram3"" value=""4"" type=""checkbox"" name=""Ram"" cl");
            WriteLiteral(@"ass=""RamOfProduct"">
                                4GB
                                <span class=""magnitude"">(3)</span>

                            </label>
                        </li>

                        <li>
                            <label>
                                <span>

                                    <span class=""ps-shown-by-js""></span>
                                </span>

                                <input input id=""ram4"" value=""6"" type=""checkbox"" name=""Ram"" class=""RamOfProduct"">
                                6GB
                                <span class=""magnitude"">(3)</span>

                            </label>
                        </li>
                    </ul>
                </div>

                <div class=""categories-filter mt-5"">
                    <h4>Memory</h4>
                    <ul class=""filter-container"">
                        <li>
                            <label>


                                <input id=");
            WriteLiteral(@"""memory1"" value=""16"" type=""checkbox"" name=""Memory"" class=""MemoryOfProduct"">
                                16GB
                                <span class=""magnitude"">(3)</span>

                            </label>
                        </li>

                        <li>
                            <label>


                                <input id=""memory2"" value=""32"" type=""checkbox"" name=""Memory"" class=""MemoryOfProduct"">
                                32GB
                                <span class=""magnitude"">(3)</span>

                            </label>
                        </li>

                        <li>
                            <label>


                                <input id=""memory3"" value=""64"" type=""checkbox"" name=""Memory"" class=""MemoryOfProduct"">
                                64GB
                                <span class=""magnitude"">(3)</span>

                            </label>
                        </li>

                        <li>
");
            WriteLiteral(@"                            <label>


                                <input id=""memory4"" value=""128"" type=""checkbox"" name=""Memory"" class=""MemoryOfProduct"">
                                128GB
                                <span class=""magnitude"">(3)</span>

                            </label>
                        </li>

                        <li>
                            <label>


                                <input id=""memory5"" value=""256"" type=""checkbox"" name=""Memory"" class=""MemoryOfProduct"">
                                256GB
                                <span class=""magnitude"">(3)</span>

                            </label>
                        </li>

                    </ul>

                </div>

                    <div class=""banner-of-smartphones mt-5"">
                        <img src=""/images/banner4.jpg""");
            BeginWriteAttribute("alt", " alt=\"", 19984, "\"", 19990, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                    </div>



            </div>

            <div class=""col-md-9 col-lg-9 col-sm-12 col-xs-12 mt-5"">

                <div class=""row"">
                    <header class=""d-none d-lg-block col-md-12 col-lg-12 col-xs-12 col-sm-12 header-of-smartphones"">
                        <h3>SMARTPHONES</h3>
                        <img src=""/images/smartphones/smartphones.jpg"" alt=""smartphone-banner"">
                    </header>
                    <div class=""d-none d-lg-flex mt-5  filter-header-of-smartphone-products col-md-12 col-lg-12 col-xs-12 col-sm-12"">
                        <div class=""left-side-of-smartphone-products-header"">

                            <span>There are 20 products.</span>
                        </div>
                        <div class=""right-side-of-smartphone-products-header"">
                            <span>Short by</span>
                            <select class=""filter-lowhigh"" name=""filter-smartphone"" id=""filter-smartphone"">
             ");
            WriteLiteral("                   ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eca78ff5a7c3759e9b8fcbe514f97a879563ca1932465", async() => {
                WriteLiteral("Select Filter");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eca78ff5a7c3759e9b8fcbe514f97a879563ca1933463", async() => {
                WriteLiteral("Price,low to high");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "eca78ff5a7c3759e9b8fcbe514f97a879563ca1934666", async() => {
                WriteLiteral("Price,high to low");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                            </select>
                        </div>

                    </div>
                    <div id=""smartphone-products"" class=""row smartphone-products"">

                    </div>

                    <div class=""pagination"">
                        <a class=""pagNumber d-none""");
            BeginWriteAttribute("value", " value=\"", 21536, "\"", 21544, 0);
            EndWriteAttribute();
            WriteLiteral("></a>\r\n");
#line 647 "C:\Users\Microsoft Surface\source\repos\Mubariz Zulfiqarov P113 Final Project\B Final End 2020\B Endd\Back\ShopElazone\ShopElazone\Views\Smartphones\Index.cshtml"
                          
                            int counter = 0;

                            for (int i = 1; i < Model.Count(); i++)
                            {
                                if (i % 10 == 0)
                                {
                                    counter++;


#line default
#line hidden
            WriteLiteral("                                    <a class=\"pag\"");
            BeginWriteAttribute("value", " value=\"", 21913, "\"", 21929, 1);
#line 656 "C:\Users\Microsoft Surface\source\repos\Mubariz Zulfiqarov P113 Final Project\B Final End 2020\B Endd\Back\ShopElazone\ShopElazone\Views\Smartphones\Index.cshtml"
WriteAttributeValue("", 21921, counter, 21921, 8, false);

#line default
#line hidden
            EndWriteAttribute();
            WriteLiteral(">");
#line 656 "C:\Users\Microsoft Surface\source\repos\Mubariz Zulfiqarov P113 Final Project\B Final End 2020\B Endd\Back\ShopElazone\ShopElazone\Views\Smartphones\Index.cshtml"
                                                               Write(counter);

#line default
#line hidden
            WriteLiteral("</a>\r\n");
#line 657 "C:\Users\Microsoft Surface\source\repos\Mubariz Zulfiqarov P113 Final Project\B Final End 2020\B Endd\Back\ShopElazone\ShopElazone\Views\Smartphones\Index.cshtml"
                                }

                            }
                        

#line default
#line hidden
            WriteLiteral("                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n </div>\r\n</div>\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"

    <script>

        let BrandMassiv = [];

        let ColorMassiv = [];

        let RamMassiv = [];

        let MemoryMassiv = [];

        let BrandCount = 0;

        let ColorCount = 0;

        let RamCount = 0;

        let memoryCount = 0;

        let countSum = BrandCount + ColorCount + RamCount;


        $(""input[name=brand]"").change(function () {

            let val1 = $(this).val().toString();

            let index = BrandMassiv.indexOf(val1);


            if (this.checked) {

                BrandCount++;
                countSum++;

                BrandMassiv.push(val1);
                console.log(BrandMassiv);

            }
            else {

                if (index > -1) {
                    BrandMassiv.splice(index, 1);

                }
                BrandCount--;
                countSum--;
                console.log(BrandMassiv);

            }
        });

        $(""input[name=Color]"").change(function () {

      ");
                WriteLiteral(@"      let val1 = $(this).val().toString();

            let index = ColorMassiv.indexOf(val1);


            if (this.checked) {

                ColorCount++;
                countSum++;

                ColorMassiv.push(val1);
                console.log(ColorMassiv);

            }
            else {

                if (index > -1) {
                    ColorMassiv.splice(index, 1);
                }
                ColorCount--;
                countSum--;
                console.log(ColorMassiv);

            }
        });

        $(""input[name=Ram]"").change(function () {

            let val1 = $(this).val().toString();

            let index = RamMassiv.indexOf(val1);


            if (this.checked) {

                RamCount++;
                countSum++;

                RamMassiv.push(val1);
                console.log(RamMassiv);

            }
            else {

                if (index > -1) {
                    RamMassiv.splice(index, 1);
     ");
                WriteLiteral(@"           }
                RamCount--;
                countSum--;
                console.log(RamMassiv);

            }
        });

        $(""input[name=Memory]"").change(function () {

            let val1 = $(this).val().toString();

            let index = MemoryMassiv.indexOf(val1);


            if (this.checked) {

                memoryCount++;
                countSum++;

                MemoryMassiv.push(val1);
                console.log(RamMassiv);

            }
            else {

                if (index > -1) {
                    MemoryMassiv.splice(index, 1);
                }
                memoryCount--;
                countSum--;
                console.log(MemoryMassiv);

            }
        });





        $(""input[type=checkbox]"").change(function () {

            ///////////////////////// BRAND SINGLE FILTER///////////////////////////////////

            let pagNumber = $("".pagNumber"").text();

            if (BrandCount == 1 ||");
                WriteLiteral(@" BrandCount > 1) {
                $.ajax({
                    method: ""GET"",
                    url: ""/Smartphones/SingleFilter"",
                    data: { brand: BrandMassiv, id: pagNumber },
                    traditional: true,
                    success: function (result) {
                        $("".smartphone-products"").html(result);
                    }
                });
            }


            ////////////////////////// COLOR SINGLE FILTER//////////////////////////////////

            if (ColorCount == 1 || ColorCount > 1) {
                $.ajax({
                    method: ""GET"",
                    url: ""/Smartphones/SingleFilter"",
                    data: { color: ColorMassiv, id: pagNumber },
                    traditional: true,
                    success: function (result) {
                        $("".smartphone-products"").html(result);
                    }
                });
            }


            ///////////////////////// RAM SINGLE FIL");
                WriteLiteral(@"TER///////////////////////////////////

            if (RamCount == 1 || RamCount > 1) {
                $.ajax({
                    method: ""GET"",
                    url: ""/Smartphones/SingleFilter"",
                    data: { ram: RamMassiv, id: pagNumber },
                    traditional: true,
                    success: function (result) {
                        $("".smartphone-products"").html(result);
                    }
                });
            }

            ///////////////////////// MEMORY SINGLE FILTER///////////////////////////////////

            if (memoryCount == 1 || memoryCount > 1) {
                $.ajax({
                    method: ""GET"",
                    url: ""/Smartphones/SingleFilter"",
                    data: { ram: memoryValue, id: pagNumber },
                    traditional: true,
                    success: function (result) {
                        $("".smartphone-products"").html(result);
                    }
                });
    ");
                WriteLiteral(@"        }


            /////////////////////////////MULTI FILTER///////////////////////////////



            if (BrandCount > 0 && ColorCount > 0 || RamCount > 0 || memoryCount > 0) {

                $.ajax({
                    method: ""GET"",
                    url: ""/Smartphones/MultipleFilter"",
                    data: { brand: BrandMassiv, color: ColorMassiv, ram: RamMassiv, id: pagNumber, memoryValue: MemoryMassiv },
                    traditional: true,
                    success: function (result) {
                        $("".smartphone-products"").html(result);
                    }
                });
            }


        });


    </script>


    <script>

        $("".filter-lowhigh"").change(function () {

            let val = $(this).val();

            $.ajax({
                method: ""GET"",
                url: ""/Smartphones/FilterPrice"",
                data: { id: val },
                traditional: true,
                success: function (resul");
                WriteLiteral(@"t) {
                    $("".smartphone-products"").html(result);
                }
            });

        });


        $("".pag"").click(function () {

            let val = $(this).attr(""value"");

            let pagNumber = $("".pagNumber"").text(val);

            let pag = $("".pagNumber"").text();

            if (BrandCount == 0 && ColorCount == 0 && RamCount == 0 && memoryCount == 0) {

                $.ajax({
                    method: ""GET"",
                    data: { id: val },
                    url: ""/Smartphones/Paged"",
                    traditional: true,
                    success: function (result) {
                        $("".smartphone-products"").html(result);
                    }
                });
            }

            if (BrandCount == 1 || BrandCount > 1) {

                $.ajax({
                    method: ""GET"",
                    url: ""/Smartphones/SingleFilter"",
                    data: { brand: BrandMassiv, id: pag },
             ");
                WriteLiteral(@"       traditional: true,
                    success: function (result) {
                        $("".smartphone-products"").html(result);
                    }
                });

            }



        });



        $.ajax({
            method: ""GET"",
            url: ""/Smartphones/Paged"",
            traditional: true,
            success: function (result) {
                $("".smartphone-products"").html(result);
            }
        });


    </script>
");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<Elazone.Models.Products>> Html { get; private set; }
    }
}
#pragma warning restore 1591
